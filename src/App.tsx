import React, { useMemo, useRef, useState, useEffect } from "react";
function mulberry32(seed: number) { let t = seed >>> 0; return function () { t += 0x6d2b79f5; let r = Math.imul(t ^ (t >>> 15), 1 | t); r ^= r + Math.imul(r ^ (r >>> 7), 61 | r); return ((r ^ (r >>> 14)) >>> 0) / 4294967296; }; }
function poisson(lam: number, rand: () => number): number { const L = Math.exp(-lam); let p = 1.0; let k = 0; do { k++; p *= rand(); } while (p > L); return Math.max(0, k - 1); }
function downloadCSV(filename: string, rows: Array<Record<string, any>>) { if (!rows.length) return; const headers = Object.keys(rows[0]); const lines = [headers.join(",")].concat(rows.map((r) => headers.map((h) => JSON.stringify(r[h] ?? "")).join(","))); const blob = new Blob(["\uFEFF" + lines.join("\n")], { type: "text/csv;charset=utf-8;" }); const url = URL.createObjectURL(blob); const a = document.createElement("a"); a.href = url; a.download = filename; a.click(); URL.revokeObjectURL(url); }
interface Stage { name: string; onHand: number; backlog: number; pipeline: number[]; pending: number; }
interface Factory { onHand: number; wip: number[]; pending: number; }
interface Settings { weeks: number; shippingDelay: number; productionLead: number; holdingCost: number; backlogCost: number; aiAlpha: number; aiSafetyWeeks: number; seed: number; }
const DEFAULT_SETTINGS: Settings = { weeks: 24, shippingDelay: 2, productionLead: 2, holdingCost: 0.5, backlogCost: 1.0, aiAlpha: 0.3, aiSafetyWeeks: 1.0, seed: 12345, };
const hud = { glass: "relative rounded-2xl border border-cyan-400/30 bg-gradient-to-b from-slate-900/60 to-slate-900/30 backdrop-blur-md shadow-[0_0_0_1px_rgba(34,211,238,0.08),0_0_40px_rgba(34,211,238,0.15)_inset]", glow: "shadow-[0_0_20px_rgba(34,211,238,0.35)]", title: "text-cyan-300 tracking-widest uppercase text-xs md:text-sm font-semibold drop-shadow-[0_0_8px_rgba(34,211,238,0.6)]", number: "font-mono text-cyan-200 text-xl md:text-2xl lg:text-3xl drop-shadow-[0_0_6px_rgba(34,211,238,0.55)]", label: "text-slate-300/80 text-xs", button: "px-4 py-2 rounded-xl border border-cyan-400/40 text-cyan-100 hover:text-black hover:bg-cyan-300/90 transition-all active:scale-[0.98]" };
const Scanlines: React.FC = () => (<div aria-hidden className="pointer-events-none fixed inset-0 opacity-[0.08]" style={{backgroundImage:"repeating-linear-gradient(to bottom, rgba(255,255,255,0.6), rgba(255,255,255,0.6) 1px, transparent 1px, transparent 3px)",mixBlendMode:"overlay"}}/>);
const Corner: React.FC<{ pos: "tl" | "tr" | "bl" | "br" }> = ({ pos }) => { const map: Record<string, string> = { tl: "left-0 top-0 rounded-tr-none", tr: "right-0 top-0 rounded-tl-none", bl: "left-0 bottom-0 rounded-br-none", br: "right-0 bottom-0 rounded-bl-none", }; return (<div className={`absolute ${map[pos]} w-8 h-8 border-2 border-cyan-400/50`} />); };
function useAICoach(alpha: number, safetyWeeks: number) { const forecastRef = useRef<number | null>(null); function updateForecast(lastDemand: number) { if (forecastRef.current == null) forecastRef.current = lastDemand; else forecastRef.current = alpha * lastDemand + (1 - alpha) * forecastRef.current; } function suggest(stage: Stage, effectiveLead: number) { const f = Math.max(0.1, forecastRef.current ?? 0.1); const ip = stage.onHand + stage.pipeline.reduce((a, b) => a + b, 0) - stage.backlog; const target = f * (effectiveLead + safetyWeeks); const raw = target - ip; const suggestion = Math.max(0, Math.ceil(raw)); return { forecast: f, ip, target, raw, suggestion }; } return { updateForecast, suggest }; }
export default function App() { const [settings, setSettings] = useState<Settings>(DEFAULT_SETTINGS); const [week, setWeek] = useState(1); const [auto, setAuto] = useState(false); const [retailer, setRetailer] = useState<Stage>({ name: "零售商", onHand: 12, backlog: 0, pipeline: Array.from({ length: settings.shippingDelay }, () => 0), pending: 0, }); const [wholesaler, setWholesaler] = useState<Stage>({ name: "經銷商", onHand: 12, backlog: 0, pipeline: Array.from({ length: settings.shippingDelay }, () => 0), pending: 0, }); const [distributor, setDistributor] = useState<Stage>({ name: "配銷商", onHand: 12, backlog: 0, pipeline: Array.from({ length: settings.shippingDelay }, () => 0), pending: 0, }); const [factory, setFactory] = useState<Factory>({ onHand: 0, wip: Array.from({ length: settings.productionLead }, () => 0), pending: 0, }); const [ordersRW, setOrdersRW] = useState<number[]>([0]); const [ordersWD, setOrdersWD] = useState<number[]>([0]); const [ordersDF, setOrdersDF] = useState<number[]>([0]); const [manualOrder, setManualOrder] = useState<string>(""); const [autoAcceptAI, setAutoAcceptAI] = useState(false); const [log, setLog] = useState<any[]>([]); const [retailHolding, setRetailHolding] = useState(0); const [retailBacklogCost, setRetailBacklogCost] = useState(0); const coach = useAICoach(settings.aiAlpha, settings.aiSafetyWeeks); useEffect(() => { const last = log.length ? log[log.length - 1].custDemand : 4; coach.updateForecast(last); }, [week]); const ai = useMemo(() => { const infoDelay = 1.0; const effLead = settings.shippingDelay + infoDelay; return coach.suggest(retailer, effLead); }, [retailer.onHand, retailer.backlog, retailer.pipeline.join("|"), settings.shippingDelay, settings.aiSafetyWeeks, settings.aiAlpha, week]); useEffect(() => { if (!auto) return; if (week > settings.weeks) return setAuto(false); const id = setTimeout(() => { handleStep(autoAcceptAI ? ai.suggestion : undefined); }, 550); return () => clearTimeout(id); }, [auto, week, ai.suggestion, autoAcceptAI, settings.weeks]); function resetAll() { setWeek(1); setAuto(false); setRetailer({ name: "零售商", onHand: 12, backlog: 0, pipeline: Array.from({ length: settings.shippingDelay }, () => 0), pending: 0 }); setWholesaler({ name: "經銷商", onHand: 12, backlog: 0, pipeline: Array.from({ length: settings.shippingDelay }, () => 0), pending: 0 }); setDistributor({ name: "配銷商", onHand: 12, backlog: 0, pipeline: Array.from({ length: settings.shippingDelay }, () => 0), pending: 0 }); setFactory({ onHand: 0, wip: Array.from({ length: settings.productionLead }, () => 0), pending: 0 }); setOrdersRW([0]); setOrdersWD([0]); setOrdersDF([0]); setRetailHolding(0); setRetailBacklogCost(0); setLog([]); } function padPipeline(pl: number[], len: number) { while (pl.length < len) pl.unshift(0); } function sum(xs: number[]) { return xs.reduce((a, b) => a + b, 0); } function handleStep(forcedOrder?: number) { if (week > settings.weeks) return; const cloneStage = (s: Stage): Stage => ({ ...s, pipeline: [...s.pipeline] }); let r = cloneStage(retailer); let w = cloneStage(wholesaler); let d = cloneStage(distributor); let f: Factory = { onHand: factory.onHand, wip: [...factory.wip], pending: factory.pending }; const S = settings; const arriveR = r.pipeline.pop() ?? 0; r.onHand += arriveR; const arriveW = w.pipeline.pop() ?? 0; w.onHand += arriveW; const arriveD = d.pipeline.pop() ?? 0; d.onHand += arriveD; const factoryComplete = f.wip.pop() ?? 0; let factoryAvailable = f.onHand + factoryComplete; const lam = week <= 4 ? 4 : 8; const demandCust = poisson(lam, mulberry32(S.seed + week)); r.backlog += demandCust; const shipToCust = Math.min(r.onHand, r.backlog); r.onHand -= shipToCust; r.backlog -= shipToCust; const playerOrder = Math.max(0, Number.isFinite(forcedOrder as number) ? (forcedOrder as number) : manualOrder === "" ? ai.suggestion : Math.max(0, parseInt(manualOrder || "0") || 0)); const newOrdersRW = [playerOrder, ...ordersRW]; const obsW = ordersRW[ordersRW.length - 1] ?? 0; const wIP = w.onHand + sum(w.pipeline); const wTarget = (obsW || ai.forecast) * (S.shippingDelay + 1); const orderW = Math.max(0, Math.ceil(wTarget - wIP)) + (newOrdersRW[0] ?? 0); const newOrdersWD = [orderW, ...ordersWD]; const obsD = ordersWD[ordersWD.length - 1] ?? 0; const dIP = d.onHand + sum(d.pipeline); const dTarget = (obsD || obsW || ai.forecast) * (S.shippingDelay + 1); const orderD = Math.max(0, Math.ceil(dTarget - dIP)) + (newOrdersWD[0] ?? 0); const newOrdersDF = [orderD, ...ordersDF]; const obsF = ordersDF[ordersDF.length - 1] ?? 0; while (f.wip.length < S.productionLead) f.wip.unshift(0); f.wip[0] += obsF; w.pending += newOrdersRW[newOrdersRW.length - 1] ?? 0; d.pending += newOrdersWD[newOrdersWD.length - 1] ?? 0; f.pending += newOrdersDF[newOrdersDF.length - 1] ?? 0; const shipF2D = Math.min(factoryAvailable, f.pending); factoryAvailable -= shipF2D; f.pending -= shipF2D; padPipeline(d.pipeline, S.shippingDelay); d.pipeline[0] += shipF2D; const shipD2W = Math.min(d.onHand, d.pending); d.onHand -= shipD2W; d.pending -= shipD2W; padPipeline(w.pipeline, S.shippingDelay); w.pipeline[0] += shipD2W; const shipW2R = Math.min(w.onHand, w.pending); w.onHand -= shipW2R; w.pending -= shipW2R; padPipeline(r.pipeline, S.shippingDelay); r.pipeline[0] += shipW2R; const newHold = retailHolding + Math.max(0, r.onHand) * S.holdingCost; const newBack = retailBacklogCost + Math.max(0, r.backlog) * S.backlogCost; setRetailer(r); setWholesaler(w); setDistributor(d); setFactory({ onHand: factoryAvailable, wip: f.wip, pending: f.pending }); setOrdersRW(newOrdersRW); setOrdersWD(newOrdersWD); setOrdersDF(newOrdersDF); setRetailHolding(newHold); setRetailBacklogCost(newBack); setWeek((wk) => wk + 1); setManualOrder(""); setLog((L) => [...L, { week, custDemand: demandCust, playerOrder, arriveR, arriveW, arriveD, factoryComplete, shipF2D, shipD2W, shipW2R, retail_onHand: r.onHand, retail_backlog: r.backlog, retail_pipeline: sum(r.pipeline), retail_hold_cum: newHold, retail_backlog_cum: newBack, wholesale_onHand: w.onHand, distributor_onHand: d.onHand, w_pending: w.pending, d_pending: d.pending, f_onHand: factoryAvailable, obsW, obsD, obsF, orderW, orderD }]); } return (<div className="min-h-screen w-full bg-[#070B12] text-slate-100 relative overflow-x-hidden"><Scanlines /><header className="sticky top-0 z-20 backdrop-blur supports-[backdrop-filter]:bg-slate-900/40 border-b border-cyan-400/10"><div className="mx-auto max-w-7xl px-4 py-3 flex items-center justify-between"><h1 className="text-lg md:text-2xl font-semibold text-cyan-300 tracking-widest">IRON-HUD BEER GAME</h1><div className="flex items-center gap-3"><span className="text-xs md:text-sm text-slate-300/80">Week {Math.min(week, settings.weeks)} / {settings.weeks}</span><button className={hud.button} onClick={() => setAuto((v) => !v)}>{auto ? "Pause" : "Auto"}</button><button className={hud.button} onClick={() => handleStep(autoAcceptAI ? ai.suggestion : undefined)}>Next</button><button className={hud.button} onClick={() => downloadCSV("beer_game_log.csv", log)}>Export CSV</button><button className={hud.button} onClick={resetAll}>Reset</button></div></div></header><main className="mx-auto max-w-7xl px-4 py-6 grid grid-cols-1 lg:grid-cols-5 gap-6"><section className={`${hud.glass} p-4 md:p-6 lg:col-span-2`}><Corner pos="tl" /><Corner pos="tr" /><Corner pos="bl" /><Corner pos="br" /><h2 className="text-cyan-300 tracking-widest uppercase text-xs md:text-sm font-semibold drop-shadow-[0_0_8px_rgba(34,211,238,0.6)]">控制面板 · CONTROL</h2><div className="mt-4 grid grid-cols-1 sm:grid-cols-2 gap-4"><div className="col-span-1 sm:col-span-2"><div className="text-slate-300/80 text-sm mb-1">AI 建議（零售商下單給經銷）</div><div className="flex items-end gap-3 flex-wrap"><div className="font-mono text-cyan-200 text-xl md:text-2xl lg:text-3xl drop-shadow-[0_0_6px_rgba(34,211,238,0.55)]">{ai.suggestion}</div><div className="text-xs text-slate-400">預測：{ai.forecast.toFixed(2)}｜目標IP：{ai.target.toFixed(2)}｜目前IP：{ai.ip}</div></div></div><label className="flex flex-col"><span className="mb-1 text-slate-300/80 text-sm">你的本週下單量</span><input className="bg-slate-900/70 border border-cyan-400/30 rounded-xl px-3 py-2 outline-none focus:ring-2 focus:ring-cyan-400" placeholder={`按 Enter 使用 AI：${ai.suggestion}`} value={manualOrder} onChange={(e) => setManualOrder(e.target.value.replace(/[^0-9]/g, ""))} onKeyDown={(e) => { if (e.key === "Enter") handleStep(); }} /></label><div className="flex items-center gap-3"><button className={hud.button} onClick={() => setManualOrder(String(ai.suggestion))}>採用 AI</button><label className="flex items-center gap-2 text-xs text-slate-300/80"><input type="checkbox" className="accent-cyan-300" checked={autoAcceptAI} onChange={(e) => setAutoAcceptAI(e.target.checked)} /> 自動接受 AI</label></div></div><div className="mt-6"><h3 className="text-cyan-300 tracking-widest uppercase text-xs md:text-sm font-semibold drop-shadow-[0_0_8px_rgba(34,211,238,0.6)] mb-2">參數設定 · SETTINGS</h3><div className="grid grid-cols-2 md:grid-cols-3 gap-3 text-xs">{([["weeks","週數"],["shippingDelay","出貨延遲"],["productionLead","工廠前置"],["aiAlpha","AI α"],["aiSafetyWeeks","安全週數"],["seed","亂數種子"]] as const).map(([k,label]) => (<label key={k} className="flex flex-col gap-1"><span className="text-slate-300/80">{label}</span><input type="number" className="bg-slate-900/70 border border-cyan-400/30 rounded-lg px-2 py-1" value={(settings as any)[k]} onChange={(e) => { const v = Number(e.target.value); setSettings((s) => ({ ...s, [k]: Number.isFinite(v) ? v : (s as any)[k] })); }} onBlur={() => resetAll()} /></label>))}</div><p className="mt-2 text-[11px] text-slate-400">※ 調整參數會在失焦時重置遊戲以生效。</p></div></section><section className="lg:col-span-3 grid grid-cols-1 md:grid-cols-2 gap-6"><div className={`${hud.glass} p-4 relative`}><Corner pos="tl" /><Corner pos="tr" /><Corner pos="bl" /><Corner pos="br" /><h3 className="text-cyan-300 tracking-widest uppercase text-xs md:text-sm font-semibold drop-shadow-[0_0_8px_rgba(34,211,238,0.6)] mb-3">零售商 · RETAIL</h3><div className="grid grid-cols-2 gap-3"><div><div className="text-slate-300/80 text-xs">On‑Hand</div><div className="font-mono text-cyan-200 text-xl md:text-2xl lg:text-3xl drop-shadow-[0_0_6px_rgba(34,211,238,0.55)]">{retailer.onHand}</div></div><div><div className="text-slate-300/80 text-xs">IP</div><div className="font-mono text-cyan-200 text-xl md:text-2xl lg:text-3xl drop-shadow-[0_0_6px_rgba(34,211,238,0.55)]">{retailer.onHand + retailer.pipeline.reduce((a,b)=>a+b,0) - retailer.backlog}</div></div><div><div className="text-slate-300/80 text-xs">Pipeline Σ</div><div className="font-mono text-cyan-200 text-xl md:text-2xl lg:text-3xl drop-shadow-[0_0_6px_rgba(34,211,238,0.55)]">{retailer.pipeline.reduce((a,b)=>a+b,0)}</div></div><div><div className="text-slate-300/80 text-xs">持有成本Σ</div><div className="font-mono text-cyan-200 text-xl md:text-2xl lg:text-3xl drop-shadow-[0_0_6px_rgba(34,211,238,0.55)]">{retailHolding.toFixed(1)}</div></div><div><div className="text-slate-300/80 text-xs">缺貨成本Σ</div><div className="font-mono text-cyan-200 text-xl md:text-2xl lg:text-3xl drop-shadow-[0_0_6px_rgba(34,211,238,0.55)]">{retailBacklogCost.toFixed(1)}</div></div></div></div><div className={`${hud.glass} p-4 relative`}><Corner pos="tl" /><Corner pos="tr" /><Corner pos="bl" /><Corner pos="br" /><h3 className="text-cyan-300 tracking-widest uppercase text-xs md:text-sm font-semibold drop-shadow-[0_0_8px_rgba(34,211,238,0.6)] mb-3">經銷商 · WHOLESALE</h3><div className="grid grid-cols-2 gap-3"><div><div className="text-slate-300/80 text-xs">On‑Hand</div><div className="font-mono text-cyan-200 text-xl md:text-2xl lg:text-3xl drop-shadow-[0_0_6px_rgba(34,211,238,0.55)]">{wholesaler.onHand}</div></div><div><div className="text-slate-300/80 text-xs">IP</div><div className="font-mono text-cyan-200 text-xl md:text-2xl lg:text-3xl drop-shadow-[0_0_6px_rgba(34,211,238,0.55)]">{wholesaler.onHand + wholesaler.pipeline.reduce((a,b)=>a+b,0)}</div></div><div><div className="text-slate-300/80 text-xs">Pipeline Σ</div><div className="font-mono text-cyan-200 text-xl md:text-2xl lg:text-3xl drop-shadow-[0_0_6px_rgba(34,211,238,0.55)]">{wholesaler.pipeline.reduce((a,b)=>a+b,0)}</div></div><div><div className="text-slate-300/80 text-xs">Pending</div><div className="font-mono text-cyan-200 text-xl md:text-2xl lg:text-3xl drop-shadow-[0_0_6px_rgba(34,211,238,0.55)]">{wholesaler.pending}</div></div></div></div><div className={`${hud.glass} p-4 relative`}><Corner pos="tl" /><Corner pos="tr" /><Corner pos="bl" /><Corner pos="br" /><h3 className="text-cyan-300 tracking-widest uppercase text-xs md:text-sm font-semibold drop-shadow-[0_0_8px_rgba(34,211,238,0.6)] mb-3">配銷商 · DISTRIBUTION</h3><div className="grid grid-cols-2 gap-3"><div><div className="text-slate-300/80 text-xs">On‑Hand</div><div className="font-mono text-cyan-200 text-xl md:text-2xl lg:text-3xl drop-shadow-[0_0_6px_rgba(34,211,238,0.55)]">{distributor.onHand}</div></div><div><div className="text-slate-300/80 text-xs">IP</div><div className="font-mono text-cyan-200 text-xl md:text-2xl lg:text-3xl drop-shadow-[0_0_6px_rgba(34,211,238,0.55)]">{distributor.onHand + distributor.pipeline.reduce((a,b)=>a+b,0)}</div></div><div><div className="text-slate-300/80 text-xs">Pipeline Σ</div><div className="font-mono text-cyan-200 text-xl md:text-2xl lg:text-3xl drop-shadow-[0_0_6px_rgba(34,211,238,0.55)]">{distributor.pipeline.reduce((a,b)=>a+b,0)}</div></div><div><div className="text-slate-300/80 text-xs">Pending</div><div className="font-mono text-cyan-200 text-xl md:text-2xl lg:text-3xl drop-shadow-[0_0_6px_rgba(34,211,238,0.55)]">{distributor.pending}</div></div></div></div><div className={`${hud.glass} p-4 relative`}><Corner pos="tl" /><Corner pos="tr" /><Corner pos="bl" /><Corner pos="br" /><h3 className="text-cyan-300 tracking-widest uppercase text-xs md:text-sm font-semibold drop-shadow-[0_0_8px_rgba(34,211,238,0.6)] mb-3">工廠 · FACTORY</h3><div className="grid grid-cols-2 gap-3 text-xs text-slate-300/80"><div>On-Hand</div><div className="font-mono">{factory.onHand}</div><div>Pending</div><div className="font-mono">{factory.pending}</div><div>WIP Σ</div><div className="font-mono">{factory.wip.reduce((a,b)=>a+b,0)}</div></div></div><div className={`${hud.glass} p-4 md:col-span-2 relative overflow-hidden`}><Corner pos="tl" /><Corner pos="tr" /><Corner pos="bl" /><Corner pos="br" /><h3 className="text-cyan-300 tracking-widest uppercase text-xs md:text-sm font-semibold drop-shadow-[0_0_8px_rgba(34,211,238,0.6)] mb-3">週紀錄 · LOG</h3><div className="max-h-[320px] overflow-auto pr-2">{log.length === 0 ? (<p className="text-slate-400 text-sm">尚無資料。按 Next 執行一週，或開啟 Auto。</p>) : (<ul className="space-y-2 text-[12px] leading-relaxed">{log.slice().reverse().map((r, idx) => (<li key={idx} className="border-l-2 border-cyan-400/40 pl-3"><span className="text-cyan-300">W{r.week}</span> ｜ 需求 {r.custDemand} ｜ 你下單 {r.playerOrder} ｜ 到貨 R/W/D {r.arriveR}/{r.arriveW}/{r.arriveD} ｜ 工廠完工 {r.factoryComplete}</li>))}</ul>)}</div></div></section></main><footer className="mx-auto max-w-7xl px-4 pb-10 text-xs text-slate-400/80"><p>提示：第 5 週起需求提升，觀察上游出貨與在途如何放大波動（牛鞭效應）。AI 建議採用 Base-Stock 與指數平滑，僅供策略參考。</p></footer></div>); }
